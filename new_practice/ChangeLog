CHANGES
=======

* new wheel
* setuptools, wheel, setup.cfg, distutils
* auto the documentation, import debtcollector
* import warnings from API/v./
* new proctice API in Python
* Sphinx ..
* pep8 standard AISim1-AISim3, bagels, buggy, cipher, coinFlips\_en, coinFlips, collisionDetection, dodger, dragon\_en, dragon, example, example(0)\_en
* new file .hy is python modules/from pep8
* dodger
* sprite and sounds
* collisiondetection
* animation
* hello\_world in pygame
* Editing AISim1.py; AISim2.py; AISim3.py
* news names files
* Artificial Intelligence: AISim1.py, AISim2.py, AISim3.py/ AISim3.py - Artificial intelligence of the best angular course; Artificial intelligence is the worst move; Artificial intelligence random move
* new coding, not bag
* Reversegam all file
* Reversegam is games
* rename python\_ex31.py >> parser\_google.py
* readmy.md
* requirements.txt
* import functools
* new func
* import functools
* new func map, functools.reduce()
* new files .py
* bottles\_of\_beer, count\_chacters
* palindrome, anagram
* fizzbuzz, sequetial\_search
* range(1, 6), text
* class Queue, al
* class Queue, all def()/
* class Queue, enqueue, dequeue/
* stack, line break
* Stack size, peek/
* Stack is True
* Stack ))
* scrape add all code/https://news.google.com/?hl=ru&gl=RU&ceid=RU:ru
* scrape add def scrape
* scrape google new
* Flask projects
* Search by value in a text file
* challenge//grep and re//
* re new
* nosense\_games
* bash >> python
* bash say
* 'bash number digit
* new []
* new re.MULTILINE
* new import re
* new import re
* new import re
* new files
* drunkard/
* players
* deck/
* new/
* games card
* ==
* practica/
* /is/ None
* //is//
* \_\_add\_\_()
* \_\_repr\_\_/// \_\_init\_\_//
* new horse, rider
* new print/I am a figure/
* taking and padding///
* <?///.>
* Composition/class/
* new def/
* add class
* new class
* polymorphism
* PublicPrivateExample/
* Data/
* Peroimeter, radius, square
* Triangle
* Rectangle, Circle
* new class)))
* weight in grams
* dark, light, yellow
* weight=100, color=light orange
* colowr, size and orange
*  with side effect, no side effect
* rock and country music
* pepp
* practice game hangman
* new txt and csv
* input in txt, csv/
* txt files in list
* open fiile terminal
* new xtxt files / /
* import os, is work files
* new keyword is import
* import math, random, statistics
* for and for 
* continue
* new files
* range
* for :))
* littter
* no ERror
* list, tuple
* ?????
* ccommit file py' ' '
* new math
* new practice
* def, even, odd
* new files
* files .sh
* Not Error files cipher.py
* New files cipher.py Caesar's cipher(not games)
* New files cipher.py Caesar's cipher(not games)
* gitignore new
* New files titactoe\_en is gamees
* New files sonar\_en is ppython
* not error sonar
* sonar game end
* sonar new def: showInstructions()
* sonar new def: enterPlayerMove(previousMMoves)
* Sonar new def: isOnBoard, makeMove
* files sonar.py new def: -getRaandomChests(numChests)
* files sonar new def: -drawBoarrd(board)
* New files sonar.py, def: -gettNewBoard
* New files games, name files hangman2\_en.py
* Not error bagels
* bagels new def: -isOnDigits
* bagels new def: -isOnDigits
* New def: -getSecretNum, -getCluees
* New files bagels is game
* Not error in game
* hangan2 sitting not error, tictactoe new def -getComputerMove, -isBoardFull. the is end files games
* New def: -makeMove, -isWinner,  -getBoardCopy, -isSpaceFree, -getPlayerMove
* New files is games tictactoe
* hangan2 Difficulty setting noot error
* hangan2 Difficulty setting +
* hangan2 Difficulty setting
* New files hangan2 is remove hanfan
* New files example(1)\_en(Not games)
* New files example(0)\_en(not games)
* New files coinflips\_en
* New files buggy\_en
* New files hangman\_en
* New files hangman
* New files coinFlips
* new files buggy is match(+)
* new files example(1) (not games)
* New  files example(0) (not game)
* new files example(no game)
* new file drangon\_en
* new game ddragon
* jokes english
* joker
* less torture
* New comment 1-100
* new files games is english
* New files games guess.py(ru)
* New practice is python\_games
